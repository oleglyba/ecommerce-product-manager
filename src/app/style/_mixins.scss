// _mixins.scss - Reusable mixins for common styles

// Card styles used throughout the application
@mixin card-base {
  background: white;
  border-radius: 1rem;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  border: 1px solid #e2e8f0;
}

// Card with enhanced shadow (for hover states)
@mixin card-elevated {
  box-shadow: 0 10px 25px 0 rgba(0, 0, 0, 0.1), 0 4px 6px 0 rgba(0, 0, 0, 0.05);
}

// Card with heavy shadow (for modals)
@mixin card-modal {
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

// Button base styles
@mixin button-base {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  border: none;
  text-decoration: none;

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
  }
}

// Primary button (blue gradient)
@mixin button-primary {
  @include button-base;
  background: linear-gradient(135deg, #3b82f6, #1d4ed8);
  color: white;
  box-shadow: 0 4px 14px 0 rgba(59, 130, 246, 0.25);

  &:hover:not(:disabled) {
    background: #2563eb;
    transform: translateY(-2px);
    box-shadow: 0 8px 25px 0 rgba(59, 130, 246, 0.35);
  }

  &:active {
    transform: translateY(0);
  }
}

// Secondary button (white with border)
@mixin button-secondary {
  @include button-base;
  background: white;
  color: #374151;
  border: 1px solid #d1d5db;

  &:hover:not(:disabled) {
    background: #f9fafb;
    border-color: #9ca3af;
  }
}

// Danger button (red)
@mixin button-danger {
  @include button-base;
  background: #dc2626;
  color: white;
  border: 1px solid #dc2626;

  &:hover:not(:disabled) {
    background: #b91c1c;
    border-color: #b91c1c;
  }
}

// Form input styles
@mixin input-base {
  width: 100%;
  padding: 0.75rem;
  border: 1px solid #d1d5db;
  border-radius: 0.5rem;
  font-size: 0.875rem;
  transition: all 0.2s ease;
  background: white;

  &:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  &::placeholder {
    color: #9ca3af;
  }

  &.error {
    border-color: #dc2626;
    box-shadow: 0 0 0 3px rgba(220, 38, 38, 0.1);
  }
}

// Text truncation
@mixin text-truncate($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Loading skeleton animation
@mixin skeleton-shimmer {
  background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

// Badge styles
@mixin badge-base {
  display: inline-block;
  padding: 0.25rem 0.75rem;
  border-radius: 0.375rem;
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.025em;
}

@mixin badge-success {
  @include badge-base;
  background: #d1fae5;
  color: #065f46;
}

@mixin badge-warning {
  @include badge-base;
  background: #fef3c7;
  color: #92400e;
}

@mixin badge-danger {
  @include badge-base;
  background: #fee2e2;
  color: #991b1b;
}

@mixin badge-info {
  @include badge-base;
  background: #f1f5f9;
  color: #475569;
}

@mixin badge-discount {
  @include badge-base;
  background: #dc2626;
  color: white;
}

// Alert/Error message styles
@mixin alert-base {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1rem 1.25rem;
  border-radius: 0.75rem;
  font-weight: 500;
  margin-bottom: 1.5rem;
}

@mixin alert-error {
  @include alert-base;
  background: #fef2f2;
  border: 1px solid #fecaca;
  color: #dc2626;
}

@mixin alert-success {
  @include alert-base;
  background: #f0fdf4;
  border: 1px solid #bbf7d0;
  color: #166534;
}

@mixin alert-warning {
  @include alert-base;
  background: #fffbeb;
  border: 1px solid #fed7aa;
  color: #92400e;
}

// Modal/Overlay styles
@mixin modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.75);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 1rem;
  backdrop-filter: blur(4px);
}

@mixin modal-content {
  @include card-base;
  @include card-modal;
  width: 100%;
  max-width: 400px;
  max-height: 90vh;
  overflow: hidden;
  animation: modalSlideIn 0.3s ease-out;
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(-30px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

// Responsive grid
@mixin responsive-grid($min-width: 280px, $gap: 1.5rem) {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($min-width, 1fr));
  gap: $gap;

  @media (max-width: 640px) {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
}

// Container with max-width and centering
@mixin container($max-width: 1200px, $padding: 2rem) {
  max-width: $max-width;
  margin: 0 auto;
  padding: $padding;

  @media (max-width: 768px) {
    padding: 1rem;
  }
}

// Hover effects for cards
@mixin card-hover-lift {
  transition: all 0.3s ease;

  &:hover {
    transform: translateY(-4px);
    @include card-elevated;
  }
}

// Focus states for interactive elements
@mixin focus-ring($color: #3b82f6) {
  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba($color, 0.1);
    border-color: $color;
  }
}

// Image container with aspect ratio
@mixin image-container($height: 200px) {
  position: relative;
  width: 100%;
  height: $height;
  overflow: hidden;
  background: #f8fafc;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }

  &:hover img {
    transform: scale(1.05);
  }
}

// Typography mixins
@mixin heading-xl {
  font-size: 2rem;
  font-weight: 700;
  color: #1e293b;
  line-height: 1.2;

  @media (max-width: 768px) {
    font-size: 1.75rem;
  }
}

@mixin heading-lg {
  font-size: 1.5rem;
  font-weight: 600;
  color: #1e293b;
  line-height: 1.3;

  @media (max-width: 768px) {
    font-size: 1.25rem;
  }
}

@mixin text-muted {
  color: #64748b;
  font-size: 0.875rem;
}

@mixin text-small {
  font-size: 0.75rem;
  color: #64748b;
}

// Flexbox utilities
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

// Empty state styling
@mixin empty-state {
  background: white;
  @include card-base;
  padding: 3rem 2rem;
  text-align: center;

  .empty-icon {
    font-size: 4rem;
    margin-bottom: 1rem;
    opacity: 0.6;
  }

  h3 {
    @include heading-lg;
    margin: 0 0 0.5rem 0;
  }

  p {
    @include text-muted;
    margin: 0 0 1.5rem 0;
    line-height: 1.6;
  }
}

// Loading states
@mixin loading-spinner($size: 1rem, $border-width: 2px) {
  width: $size;
  height: $size;
  border: $border-width solid transparent;
  border-top: $border-width solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Fade in animation
@mixin fade-in-up($delay: 0s) {
  animation: fadeInUp 0.4s ease both;
  animation-delay: $delay;
}

@keyframes fadeInUp {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

// Close button for modals/alerts
@mixin close-button {
  background: none;
  border: none;
  color: #6b7280;
  cursor: pointer;
  padding: 0.25rem;
  border-radius: 0.25rem;
  transition: all 0.2s ease;
  width: 2rem;
  height: 2rem;
  @include flex-center;

  &:hover {
    background: #f3f4f6;
    color: #374151;
  }
}

// Responsive breakpoints
$breakpoints: (
        'sm': 640px,
        'md': 768px,
        'lg': 1024px,
        'xl': 1280px,
        'xxl': 1536px
);

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @warn "Unknown breakpoint: #{$breakpoint}.";
  }
}